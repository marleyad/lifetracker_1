### TYPE YOUR CODE BELOW ###
brf_part1 <- brf_part1 |>
filter(
FRUIT2 != 777,
FRUIT2 != 999
) |>
select(-FRUIT2) |>
arrange(GENHLTH) |>
as.data.frame()
Q5 <- brf_part1 |>
head(10)
### VIEW OUTPUT ###
Q5
### Do not edit the following line. It is used by CodeGrade.
# CG Q6 #
### TYPE YOUR CODE BELOW ###
Q6 <- brf_part1 |>
group_by(GENHLTH)|>
summarise(
Mean = round(mean(FRTDAY),2),
Median = median(FRTDAY),
SD = round(sd(FRTDAY),2),
Count = n()
) |>
as.data.frame()
### VIEW OUTPUT ###
Q6
ggplot(brf_part1, aes(FRTDAY, FRTDAY)) +
geom_boxplot() +
coord_flip()
lost_values <- sum(brf_part1$FRTDAY > 8)
w24 <- round((lost_values / nrow(brf_part1)) * 100,2)
w24
### Do not edit the following line. It is used by CodeGrade.
# CG Q7 #
### TYPE YOUR CODE BELOW ###
Q7 <- 5
### VIEW OUTPUT ###
Q7
### Do not edit the following line. It is used by CodeGrade.
# CG Q8 #
### TYPE YOUR CODE BELOW ###
Q8 <- 5
### VIEW OUTPUT ###
Q8
### Do not edit the following line. It is used by CodeGrade.
# CG Q9 #
### TYPE YOUR CODE BELOW ###
Q9 <- 5
### VIEW OUTPUT ###
Q9
### Do not edit the following line. It is used by CodeGrade.
# CG Q10 #
### TYPE YOUR CODE BELOW ###
Q10 <- 5
### VIEW OUTPUT ###
Q10
rm(list = ls())
library(tidyverse)
library(psych)
library(lm.beta)
# This will take a few moments to load since the file is so large.
brf <- read_csv("brfss2021.csv", show_col_types = FALSE)
### Do not edit the following line. It is used by CodeGrade.
# CG Q1 #
### TYPE YOUR CODE BELOW ###
brf_part1 <- brf |>
select(FRUIT2, CHECKUP1,GENHLTH) |>
as.data.frame()
Q1 <- brf_part1 |>
head(10)
### VIEW OUTPUT ###
Q1
### Do not edit the following line. It is used by CodeGrade.
# CG Q2 #
### TYPE YOUR CODE BELOW ###
brf_part1 <- brf_part1 |>
filter(
!(GENHLTH %in% c(7, 9)),
!is.na(GENHLTH),
!(CHECKUP1 %in% c(7, 9)),
!is.na(CHECKUP1)
) |>
arrange(GENHLTH) |>
as.data.frame()
Q2 <- brf_part1 |>
head(10)
### VIEW OUTPUT ###
Q2
### Do not edit the following line. It is used by CodeGrade.
# CG Q3 #
### TYPE YOUR CODE BELOW ###
get_count <- sum(brf_part1$GENHLTH %in% c(2,3))
Q3 <- data.frame(
Count = get_count,
Percent = round(get_count / nrow(brf_part1) * 100,1)
)
### VIEW OUTPUT ###
Q3
### Do not edit the following line. It is used by CodeGrade.
# CG Q4 #
### TYPE YOUR CODE BELOW ###
total_rows <- nrow(brf_part1)
q4_data_stuff <- brf_part1 |>
filter(GENHLTH %in% c(1, 2, 3)) |>
group_by(CHECKUP1) |>
summarise(
n = n(),
proportion = round(sum(GENHLTH %in% c(1, 2, 3)) / total_rows,3)
) |>
as.data.frame()
Q4 <- q4_data_stuff
### VIEW OUTPUT ###
Q4
brf_part1 <- brf_part1 |>
mutate(
FRTDAY = round(case_when(
# Handle the daily values - 100's
between(as.numeric(FRUIT2), 101,199) ~ as.numeric(str_sub(FRUIT2, 2, 3)),
# Handle the week values - 200's
between(as.numeric(FRUIT2), 201,299) ~ as.numeric(str_sub(FRUIT2, 2, 3)) / 7,
# Handle the month values - 300's
between(as.numeric(FRUIT2), 301,399) ~ as.numeric(str_sub(FRUIT2, 2, 3)) / 30,
# Handle The less than once a month
FRUIT2 == 300 ~ 0.02,
# Handle the Never's
FRUIT2 == 555 ~ 0,
# I got rid of handling 777 and 999 in the case_when() statment here
# Handle everything else. I checked this and the outputs  777 and 999 are still there
TRUE ~ as.numeric(FRUIT2)
),2)
) |>
relocate(FRTDAY) |>
as.data.frame()
brf_part1
View(brf_part1)
brf_part1 <- brf_part1 |>
filter(
### Now I remove the 777 and the 999 values
FRUIT2 != 777,
FRUIT2 != 999
)
View(brf_part1)
install.packages("readxl")
library(readxl)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
View(adam_study)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
View(adam_study)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
sum(adam_study$minutes)
/60
82082/60
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
View(fun1)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
install.packages("shiny")
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
View(fun1)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
install.packages("shinydashboard")
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
source("~/ADAM TRACKER/tracker.R", echo=TRUE)
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
?dashboardSidebar
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
styler:::style_selection()
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
styler:::style_selection()
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
install.packages("DT")
library(DT)
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
install.packages("semantic.dashboard")
library(semantic.dashboard)
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
runApp('ADAM TRACKER/tracker.R')
styler:::style_selection()
View(adam_study)
runApp('ADAM TRACKER/tracker.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
View(adam_study)
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
adam_study <- read_excel("C:/Users/Owner/OneDrive/Documents/Excels/adam_study.xlsx") |>
select(1:11) |>
select(-hours) |>
filter(minutes > 0) |>
as.data.frame()
View(adam_study)
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
View(adam_study)
runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.6.R')
library(shiny); runApp('ADAM TRACKER/tracker1.4.R')
setwd("C:/Users/Owner/OneDrive/Documents/ADAM TRACKER")
source("~/ADAM TRACKER/sqlitfile.R", echo=TRUE)
source("~/ADAM TRACKER/sqlitfile.R", echo=TRUE)
getwd()
library(shiny); runApp('tracker1.6b.R')
source("~/ADAM TRACKER/server.R", echo=TRUE)
View(server)
View(server)
con <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - STRENGTH
react_strength_data <- reactiveVal({
dbReadTable(con, "pushups")
})
print(ract_strength_data)
# Initialize connection to SQLite database
con <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - STRENGTH
react_strength_data <- reactiveVal({
dbReadTable(con, "pushups")
})
print(react_strength_data)
# Initialize connection to SQLite database
con <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - STRENGTH
react_strength_data <- reactiveVal({
dbReadTable(con, "pushups")
})
react_strength_data$data <- as.Date(react_strength_data)
con <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - STRENGTH
react_strength_data <- reactiveVal({
dbReadTable(con, "pushups")
})
react_strength_data$date <- as.Date(react_strength_data$date)
con <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - STRENGTH
react_strength_data <- reactiveVal({
dbReadTable(con, "pushups")
})
# react_strength_data$date <- as.Date(react_strength_data$date)
print(react_strength_data)
# Initialize connection to SQLite database
con <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - STRENGTH
react_strength_data <- reactiveVal({
data <- dbReadTable(con, "pushups")
data$date <- as_date(data$date)
data
})
print(react_strength_data)
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
# Plot
ggplot(
line_strength_data,
aes(
x = date,
y = pushups
)
) +
geom_line(color = "blue") +
labs(
x = "",
y = "Push Ups"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
library(shiny); runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
print(react_pushup_data)
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
# Initialize reactive data - situps
react_situp_data <- reactiveVal({
data1 <- dbReadTable(con_str, "situps")
# convert to readable dates
data1$date <- as_date(data1$date)
# return all data
data1
})
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
View(excel_data)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
View(excel_data)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
View(excel_data)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
source("~/ADAM TRACKER/RANDOMRANDOM.R", echo=TRUE)
# Loop in data
for (i in 1:nrow(excel_data)) {
dbExecute(con,
"INSERT INTO study (date, minutes, notes, anki, github,linkedin, program, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
params = list(excel_data$date[i], excel_data$minutes[i], excel_data$notes[i],
excel_data$anki[i], excel_data$Github[i], excel_data$LinkedIn[i],
excel_data$program[i], excel_data$status[i]))
}
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
# Initialize connection to SQLite database
con_str <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
data2 <- dbReadTable(con_str, "study")
View(data2)
runApp('tracker1.6b.R')
data2 <- dbReadTable(con_str, "study")
data2$date <- as_date(data2$date)
con_str <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
source("~/ADAM TRACKER/server.R", echo=TRUE)
react_study_data <- reactiveVal({
data2 <- dbReadTable(con_str, "study")
# convert to readable dates
data2$date <- as_date(data2$date)
# return all data
data2
})
View(data2)
runApp('tracker1.6b.R')
# Initialize connection to SQLite database
con_str <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
react_study_data <- reactiveVal({
data2 <- dbReadTable(con_str, "study")
# convert to readable dates
data2$date <- as_date(data2$date, origin = "1970-01-01")
# return all data
data2
})
View(data2)
library(lubridate)
runApp('tracker1.6b.R')
View(data2)
# Initialize connection to SQLite database
con_str <- dbConnect(SQLite(), "C:/Users/Owner/OneDrive/Documents/ADAM TRACKER/pushup_data_file.sqlite")
# Initialize reactive data - study
react_study_data <- reactiveVal({
data2 <- dbReadTable(con_str, "study")
# convert to readable dates
data2$date <- as_datetime(data2$date)
# return all data
data2
})
View(data2)
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
# print(react_situp_data)
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
source("~/ADAM TRACKER/load_into_sql.R", echo=TRUE)
View(excel_data)
View(excel_data)
source("~/ADAM TRACKER/load_into_sql.R", echo=TRUE)
runApp('tracker1.6b.R')
# Replace 'your_file.xlsx' with the path to your Excel file
excel_data <- read_excel("C:/Users/Owner/OneDrive/Documents/Excels/adam_study.xlsx") |>
select(1:11) |>
select(-days, -hours, -week) |>
filter(minutes > 0)
View(excel_data)
class(excel_data$date)
source("~/ADAM TRACKER/load_into_sql.R", echo=TRUE)
source("~/ADAM TRACKER/load_into_sql.R", echo=TRUE)
class(excel_data$date)
source("~/ADAM TRACKER/load_into_sql.R", echo=TRUE)
class(excel_data$date)
View(excel_data)
# Replace 'your_file.xlsx' with the path to your Excel file
excel_data <- read_excel("C:/Users/Owner/OneDrive/Documents/Excels/adam_study.xlsx") |>
select(1:11) |>
select(-days, -hours, -week) |>
filter(minutes > 0) |>
mutate(
date = as.Date(date)
)
class(excel_data$date)
source("~/ADAM TRACKER/load_into_sql.R", echo=TRUE)
# convert to readable dates
data2$date <- as_datetime(data2$date)
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
runApp('tracker1.6b.R')
